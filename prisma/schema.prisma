// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Template {
  id            String         @id @default(cuid())
  name          String
  subject       String
  body          String
  variables     Json // Array of variable names like ["username", "company"]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  notifications Notification[]

  @@map("templates")
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  firstName     String?
  lastName      String?
  metadata      Json? // Additional user data
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  notifications Notification[]

  @@map("users")
}

model Notification {
  id            String               @id @default(cuid())
  templateId    String
  userId        String
  priority      NotificationPriority
  status        NotificationStatus   @default(PENDING)
  sentAt        DateTime?
  failedAt      DateTime?
  retryCount    Int                  @default(0)
  errorMessage  String?
  sesMessageId  String?
  s3SnapshotUrl String?
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt

  template Template @relation(fields: [templateId], references: [id])
  user     User     @relation(fields: [userId], references: [id])

  @@map("notifications")
}

enum NotificationPriority {
  P1
  P2
  P3
}

enum NotificationStatus {
  PENDING
  QUEUED
  PROCESSING
  SENT
  FAILED
  EXPIRED
}
